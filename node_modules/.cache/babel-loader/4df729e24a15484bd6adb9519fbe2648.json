{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Desktop\\\\LearnReact\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  const startEditingHandler = () => {\n    set;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this) //Basically when onSaveExpenseData is executed, it will point to saveExpenseDataHandler. Which expects a parameter\n  //Usually the thing between {} is a variable, in child-to-parent, it is a function so that it can expect some parameter\n  ;\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["C:/Users/singh/Desktop/LearnReact/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditing","setIsEditing","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","startEditingHandler","set"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMM,sBAAsB,GAAIC,kBAAD,IAAwB;AACnD,UAAMC,WAAW,GAAG,EAChB,GAAGD,kBADa;AAEhBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFY,KAApB;AAIAT,IAAAA,KAAK,CAACU,YAAN,CAAmBL,WAAnB;AACH,GAND;;AAQA,QAAMM,mBAAmB,GAAG,MAAM;AAC9BC,IAAAA,GAAG;AACN,GAFD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAIT;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAKI;AACA;AANJ;AAQH,CA1BD;;GAAMJ,U;;KAAAA,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./NewExpense.css\"\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => { \r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    };\r\n    \r\n    const startEditingHandler = () => {\r\n        set\r\n    };\r\n\r\n\r\n    \r\n    return (\r\n        <div className = \"new-expense\">\r\n            <button>Add New Expense</button>\r\n            <ExpenseForm onSaveExpenseData = {saveExpenseDataHandler} />\r\n        </div>\r\n        //Basically when onSaveExpenseData is executed, it will point to saveExpenseDataHandler. Which expects a parameter\r\n        //Usually the thing between {} is a variable, in child-to-parent, it is a function so that it can expect some parameter\r\n    );\r\n};\r\n\r\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}