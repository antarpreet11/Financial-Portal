{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","enteredFilter","setEnteredFilter","filteredExpenses","filter","toString","selectedFilter","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","dummyExpenses","App","setExpenses","console","log","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"obAaeA,EAVF,SAACC,GACV,IAAMC,EAAU,QAAUD,EAAME,UAMhC,OAAO,qBAAKA,UAAYD,EAAjB,SAA4BD,EAAMG,YCmB9BC,G,MAzBQ,SAACJ,GAUtB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQG,MAASL,EAAMM,SAAUC,SARX,SAACC,GAC3BR,EAAMS,eAAeD,EAAME,OAAOL,QAO9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCDKM,G,kBAlBK,SAACX,GACnB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMf,EAAMa,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOhB,EAAMa,KAAKI,cAMxB,OACE,sBAAKf,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCU,IACtC,qBAAKV,UAAU,qBAAf,SAAqCc,IACrC,qBAAKd,UAAU,oBAAf,SAAoCa,SCS3BG,G,MAnBK,SAAClB,GAMnB,OACE,6BACA,eAAC,EAAD,CAAME,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaW,KAAMb,EAAMa,OACzB,sBAAKX,UAAU,4BAAf,UACE,6BAAKF,EAAMmB,QACX,sBAAKjB,UAAU,sBAAf,cAAuCF,EAAMoB,oBCUtCC,EAxBM,SAACrB,GAEpB,OAA2B,IAAvBA,EAAMsB,MAAMC,OACL,oBAAIrB,UAAU,0BAAd,gCAQT,oBAAIA,UAAU,gBAAd,SACGF,EAAMsB,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBP,KAAMY,EAAQZ,MAHTY,EAAQC,U,OCERC,G,MAjBE,SAAC3B,GAChB,IAAI4B,EAAgB,KAMpB,OAJI5B,EAAM6B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO/B,EAAMK,MAAQL,EAAM6B,SAAY,KAAO,KAInE,sBAAK3B,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAAkB8B,MAAO,CAAEC,OAAQL,OAEpD,qBAAK1B,UAAU,mBAAf,SAAmCF,EAAMkC,aCShCC,G,MAnBD,SAACnC,GAEX,IAAMoC,EAAkBpC,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUjC,SAC9DkC,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAEjC,OACA,qBAAKlC,UAAU,QAAf,SACGF,EAAMqC,WAAWb,KAAI,SAACc,GAAD,OACpB,cAAC,EAAD,CACEjC,MAAOiC,EAAUjC,MACjBwB,SAAUU,EACVL,MAAOI,EAAUJ,OACZI,EAAUJ,cCYVO,EA1BO,SAAAzC,GAElB,IAF2B,EAErB0C,EAAkB,CACpB,CAACR,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,GACtB,CAAC6B,MAAO,MAAO7B,MAAO,IAdC,cAiBNL,EAAM2C,UAjBA,IAiB3B,IAAI,EAAJ,qBAAqC,CAAC,IAA5BlB,EAA2B,QAEjCiB,EADqBjB,EAAQZ,KAAK+B,YACJvC,OAASoB,EAAQL,QAnBxB,8BAuB3B,OAAO,cAAC,EAAD,CAAOiB,WAAYK,KCKfG,EAxBE,SAAC7C,GAChB,MAA0C8C,mBAAS,QAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAMIC,EAAmBjD,EAAMsB,MAAM4B,QAAO,SAACzB,GACzC,OAAOA,EAAQZ,KAAKI,cAAckC,aAAeJ,KAOnD,OACE,eAAC,EAAD,CAAM7C,UAAU,WAAhB,UACE,cAAC,EAAD,CAAgBI,SAAUyC,EAAetC,eAdvB,SAAC2C,GACrBJ,EAAiBI,MAcf,cAAC,EAAD,CAAeT,SAAYM,IAC3B,cAAC,EAAD,CAAc3B,MAAO2B,Q,OCiEZI,G,YAxFK,SAACrD,GACnB,MAAwC8C,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAA0CT,mBAAS,IAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KA6CA,OACE,uBAAMC,SAlBc,SAACpD,GACrBA,EAAMqD,iBAEN,IAAMC,EAAc,CAClB3C,MAAOmC,EACPlC,QAASoC,EACT3C,KAAM,IAAIkD,KAAKL,IAEjB1D,EAAMgE,kBAAkBF,GAIxBP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAIf,UACE,sBAAKzD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACE+D,KAAK,OACL5D,MAAOiD,EACP/C,SA3CiB,SAACC,GAC1B+C,EAAgB/C,EAAME,OAAOL,aA6CzB,sBAAKH,UAAU,uBAAf,UACE,2CACA,uBACE+D,KAAK,SACL5D,MAAOmD,EACPU,IAAI,OACJC,KAAK,OACL5D,SA1CkB,SAACC,GAC3BiD,EAAiBjD,EAAME,OAAOL,aA4C1B,sBAAKH,UAAU,uBAAf,UACE,yCACA,uBACE+D,KAAK,OACL5D,MAAOqD,EACPQ,IAAI,aACJ1B,IAAI,aACJjC,SAjDgB,SAACC,GACzBmD,EAAenD,EAAME,OAAOL,gBAoD1B,sBAAKH,UAAU,uBAAf,UACE,wBAAQ+D,KAAK,SAASG,QAASpE,EAAMqE,SAArC,oBACA,wBAAQJ,KAAK,SAAb,iCChDOK,EAjCI,SAACtE,GAEhB,MAAkC8C,oBAAS,GAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KAqBA,OACI,sBAAKtE,UAAY,cAAjB,WACMqE,GAAa,wBAAQH,QAZH,WACxBI,GAAa,IAWM,6BACdD,GAAY,cAAC,EAAD,CAAaP,kBAtBH,SAACS,GAC5B,IAAMX,EAAW,2BACVW,GADU,IAEb/C,GAAII,KAAK4C,SAASvB,aAEtBnD,EAAM2E,aAAab,GACnBU,GAAa,IAgB8DH,SATpD,WACvBG,GAAa,UClBfI,EAAgB,CACpB,CACElD,GAAI,KACJP,MAAO,eACPC,OAAQ,MACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KAE1B,CAAErC,GAAI,KAAMP,MAAO,SAAUC,OAAQ,OAAQP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KACrE,CACErC,GAAI,KACJP,MAAO,gBACPC,OAAQ,OACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KAE1B,CACErC,GAAI,KACJP,MAAO,oBACPC,OAAQ,IACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KAE1B,CACErC,GAAI,KACJP,MAAO,QACPC,OAAQ,IACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KAE1B,CACErC,GAAI,KACJP,MAAO,SACPC,OAAQ,KACRP,KAAM,IAAIkD,KAAK,KAAM,GAAI,KAE3B,CACErC,GAAI,KACJP,MAAO,UACPC,OAAQ,IACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,IAE1B,CACErC,GAAI,KACJP,MAAO,kBACPC,OAAQ,KACRP,KAAM,IAAIkD,KAAK,KAAM,GAAI,KAE3B,CACErC,GAAI,KACJP,MAAO,kBACPC,OAAQ,IACRP,KAAM,IAAIkD,KAAK,KAAM,GAAI,IAE3B,CACErC,GAAI,MACJP,MAAO,eACPC,OAAQ,GACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KAE1B,CACErC,GAAI,MACJP,MAAO,iBACPC,OAAQ,IACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,MAgCbc,EA1BH,WAEV,MAAgC/B,mBAAS8B,GAAzC,mBAAOjC,EAAP,KAAiBmC,EAAjB,KAQA,OADAC,QAAQC,IAAIrC,GAEV,gCACE,cAAC,EAAD,CAAYgC,aARU,SAAClD,GACzBqD,GAAY,SAACG,GACX,MAAM,CAAExD,GAAR,mBAAoBwD,UAOpB,cAAC,EAAD,CAAU3D,MAAOqB,QC7EvBuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.31bba408.chunk.js","sourcesContent":["import React from 'react'; \r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n\r\n\r\n\r\n\r\n    \r\n    return <div className ={classes} >{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n  const filterChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value = {props.selected} onChange = {filterChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react'; \r\nimport './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react'; \r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate.js\";\r\nimport Card from '../UI/Card'\r\nimport \"../UI/Buttons.css\"\r\n\r\nconst ExpenseItem = (props) => {\r\n  \r\n\r\n\r\n\r\n  \r\n  return (\r\n    <li>\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n  if (props.items.length === 0) {\r\n      return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  \r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value) \r\n    const totalMaximum = Math.max(...dataPointValues);\r\n  \r\n    return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from \"../Chart/Chart\"\r\n\r\nconst ExpensesChart = props => {\r\n    \r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n    \r\n    for(const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    };\r\n\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\"\r\nimport ExpensesChart from \"./ExpensesChart\"\r\n\r\nconst Expenses = (props) => {\r\n  const [enteredFilter, setEnteredFilter] = useState(\"2020\");\r\n\r\n  const filterHandler = (selectedFilter) => {\r\n    setEnteredFilter(selectedFilter);\r\n  };\r\n\r\n  let filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === enteredFilter;\r\n  });\r\n  \r\n\r\n\r\n\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selected={enteredFilter} onChangeFilter={filterHandler} />\r\n      <ExpensesChart expenses = {filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  //The rest of the comments show one-state approach\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //     enteredTitle: '',\r\n  //     enteredAmount: '',\r\n  //     enteredDate: ''\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput((prevState) => {\r\n    //     return {\r\n    //     ...prevState,\r\n    //     enteredTitle: event.target.value,\r\n    //     };\r\n    // })\r\n\r\n    //Same for the rest 2\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    //Imp didn't understand well\r\n    //Basically onSaveExpenseData is a pointer and this statement passes expenseData as parameters to saveExpenseDataHandler\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"Button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\nimport \"./NewExpense.css\"\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => { \r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n    \r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n\r\n    \r\n    return (\r\n        <div className = \"new-expense\">\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing &&<ExpenseForm onSaveExpenseData = {saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n        </div>\r\n        //Basically when onSaveExpenseData is executed, it will point to saveExpenseDataHandler. Which expects a parameter\r\n        //Usually the thing between {} is a variable, in child-to-parent, it is a function so that it can expect some parameter\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst dummyExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 6, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 1, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 4, 12),\n  },\n  {\n    id: \"e5\",\n    title: \"Books\",\n    amount: 800,\n    date: new Date(2021, 9, 11),\n  },\n  {\n    id: \"e6\",\n    title: \"Laptop\",\n    amount: 1500,\n    date: new Date(2021, 10, 11),\n  },\n  {\n    id: \"e7\",\n    title: \"Grocery\",\n    amount: 100,\n    date: new Date(2020, 0, 5),\n  },\n  {\n    id: \"e8\",\n    title: \"Christmas Gifts\",\n    amount: 2500,\n    date: new Date(2020, 11, 12),\n  },\n  {\n    id: \"e9\",\n    title: \"Dental Expenses\",\n    amount: 2000,\n    date: new Date(2019, 10, 5),\n  },\n  {\n    id: \"e10\",\n    title: \"Udemy Course\",\n    amount: 25,\n    date: new Date(2020, 7, 30),\n  },\n  {\n    id: \"e11\",\n    title: \"GameStop calls\",\n    amount: 2000,\n    date: new Date(2020, 9, 30),\n  }\n  \n];\n\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(dummyExpenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  console.log(expenses);\n  return (\n    <div>\n      <NewExpense onAddExpense = {addExpenseHandler}/>\n      <Expenses items={expenses} />\n    </div>\n  );\n\n  // Alternative to this,\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n}\n\nexport default App;\n","import React from 'react'; \nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}